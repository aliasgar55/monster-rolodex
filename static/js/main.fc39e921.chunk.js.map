{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","width","height","name","email","CardList","monsters","map","SearchBox","placeholder","value","handleChange","type","onChange","App","e","setState","search","target","state","loading","fetch","then","res","json","data","catch","error","console","log","filteredMonsters","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAkBeA,EAfF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,8BAAyBF,EAAMG,QAAQC,GAAvC,iBACHC,IAAI,UACJC,MAAM,QACNC,OAAO,UAET,6BAAKP,EAAMG,QAAQK,OACnB,4BAAIR,EAAMG,QAAQM,YCCTC,G,MAVE,SAACV,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAACT,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCOZS,G,MAZG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACvC,OACE,uBACEf,UAAU,aACVgB,KAAK,SACLH,YAAaA,EACbC,MAAOA,EACPG,SAAUF,MCiCDG,E,kDArCb,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOR,SAPrD,EAAKS,MAAQ,CACXb,SAAU,GACVc,SAAS,EACTH,OAAQ,IALE,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEV,SAAUmB,EAAML,SAAS,OACxDM,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAGlC,WAAU,IAAD,OACDG,EAAmBC,KAAKZ,MAAMb,SAAS0B,QAAO,SAAClC,GAAD,OAClDA,EAAQK,KAAK8B,cAAcC,SAAS,EAAKf,MAAMF,OAAOgB,kBAGxD,OACE,sBAAKrC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,MAAOqB,KAAKZ,MAAMF,OAClBN,aAAcoB,KAAKpB,aACnBF,YAAY,iBAEd,cAAC,EAAD,CAAUH,SAAUwB,W,GAhCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc39e921.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`http://robohash.org/${props.monster.id}?size=180x180`}\r\n        alt=\"monster\"\r\n        width=\"180px\"\r\n        height=\"180px\"\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nconst SearchBox = ({ placeholder, value, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search-box\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      loading: true,\n      search: \"\",\n    };\n  }\n\n  handleChange = (e) => this.setState({ search: e.target.value });\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ monsters: data, loading: false }))\n      .catch((error) => console.log(error));\n  }\n\n  render() {\n    const filteredMonsters = this.state.monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(this.state.search.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          value={this.state.search}\n          handleChange={this.handleChange}\n          placeholder=\"Monster name\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}